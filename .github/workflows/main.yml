# This is a basic workflow to help you get started with Actions

name: GVL

# Controls when the workflow will run
on:
    schedule:
    - cron: "*/5 * * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
 cron:
    # The type of runner that the job will run on
    
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use Node.js 13.3.1
      - uses: actions/setup-node@v3.4.1
        with:
            # Set always-auth in npmrc.
            # always-auth: # optional, default is false
            # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
            node-version: 13.3.0
            # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
            # node-version-file: # optional
            # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
            architecture: x86
            # Set this option if you want the action to check for the latest available version that satisfies the version spec.
            # check-latest: # optional
            # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
            # registry-url: # optional
            # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
            # scope: # optional
            # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
            # token: # optional, default is ${{ github.token }}
            # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
            # cache: # optional
            # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
            # cache-dependency-path: # optional
            
      # Execute node file
      - name: Run node file
        run: | 
            npm install
            node update-vendor-list.js
